import javax.tools.JavaCompiler

plugins {
    id 'com.github.ben-manes.versions' version '0.28.0'
}


subprojects {
    apply plugin: 'java'

    group 'melon'
    version '0.1.0'

    repositories {
        repositories {
            maven { url 'https://maven.aliyun.com/repository/public/' }
            mavenLocal()
            mavenCentral()
        }
    }

    sourceCompatibility = 1.11
    tasks.withType(JavaCompiler) {
        options.encoding = 'UTF-8'
    }

    dependencies {
        // Commons
        implementation 'org.apache.commons:commons-lang3:3.10'
        implementation 'org.projectlombok:lombok:1.18.12'

        // Logging
        implementation 'org.slf4j:slf4j-api:1.7.30'
        implementation 'ch.qos.logback:logback-core:1.2.3'
        implementation 'ch.qos.logback:logback-classic:1.2.3'

        // Jackson
        implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
        implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.0'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.0'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0'
        implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:2.11.0'

        // Test
        testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
        testImplementation 'org.mockito:mockito-core:3.3.3'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
}

def isNonStable = {
    String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any {
            it -> version.toUpperCase().contains(it)
        }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
} as Object

dependencyUpdates {
    checkForGradleUpdate = true
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
